{{{imports}}}

import { deepSignal, DeepSignal } from "deepsignal";

export interface Modules {
    {{{module_interface}}}
}

export type Features = string[];

export interface ConfigModified {
    modified: number
}

export interface KeepAlive {
    uptime: number
}

export interface ConfigMap {
    {{{config_map_entries}}}
    'info/modules': Modules
    'info/features': Features
    'info/keep_alive': KeepAlive
    'reboot': {}
}

export type ConfigModifiedKey = `${keyof ConfigMap}_modified`;

// It is safe to use null here:
// All api cache accesses only happen after the websocket connection is established.
// The first message contains a complete dump of the ESP's state.
// All cache values are then initialized.
export let api_cache: DeepSignal<{[key in (keyof ConfigMap | ConfigModifiedKey)]: key extends keyof ConfigMap ? ConfigMap[key] : ConfigModified}> = deepSignal({
    {{{api_cache_entries}}}
    'info/modules': null as any,
    'info/features': null as any,
    'info/keep_alive': null as any,
    'reboot': null as any,

    'info/modules_modified': null as any,
    'info/features_modified': null as any,
    'info/keep_alive_modified': null as any,
    'reboot_modified': null as any
});
