/** @jsxImportSource preact */
import { h } from "preact";
let x = {
    "meters_modbus_tcp": {
        "status": {
        },
        "navbar": {
        },
        "content": {
            "meter_class": "Modbus/TCP",

            "display_name": "Anzeigename",
            "host": "Hostname oder IP-Adresse",
            "port": "Port",
            "port_muted": "typischerweise 502 oder 1502",
            "table": "Registertabelle",
            "table_custom": "Benutzerdefiniert",
            "table_sungrow_hybrid_inverter": "Sungrow Hybrid-Wechselrichter (SH-Serie)",
            "table_sungrow_string_inverter": "Sungrow String-Wechselrichter (SG-Serie)",
            "table_solarmax_max_storage": "Solarmax Max.Storage",
            "table_victron_energy_gx": "Victron Energy GX",
            "table_deye_hybrid_inverter": "Deye Hybrid-Wechselrichter",
            "table_alpha_ess_hybrid_inverter": "Alpha ESS Hybrid-Wechselrichter",
            "table_shelly_pro_em": "Shelly Pro EM",
            "table_shelly_pro_3em": "Shelly Pro 3EM",
            "table_goodwe_hybrid_inverter": "GoodWe Hybrid-Wechselrichter (EH-, ET-, BH- und BT-Serie)",
            "table_solax_hybrid_inverter": "Solax Hybrid-Wechselrichter",
            "table_fronius_gen24_plus": "Fronius GEN24 Plus",
            "table_hailei_hybrid_inverter": "Hailei Hybrid-Wechselrichter (TPH-Serie)",
            "table_fox_ess_h3_hybrid_inverter": "Fox ESS H3 Hybrid-Wechselrichter",
            "table_siemens_pac2200": "Siemens PAC2200",
            "table_siemens_pac3120": "Siemens PAC3120",
            "table_siemens_pac3200": "Siemens PAC3200",
            "table_siemens_pac3220": "Siemens PAC3220",
            "table_siemens_pac4200": "Siemens PAC4200",
            "table_siemens_pac4220": "Siemens PAC4220",
            "table_carlo_gavazzi_em24_din": "Carlo Gavazzi EM24-DIN",
            "table_carlo_gavazzi_em24_e1": "Carlo Gavazzi EM24-E1",
            "table_carlo_gavazzi_em100": "Carlo Gavazzi EM100",
            "table_carlo_gavazzi_et100": "Carlo Gavazzi ET100",
            "table_carlo_gavazzi_em210": "Carlo Gavazzi EM210",
            "table_carlo_gavazzi_em270": "Carlo Gavazzi EM270",
            "table_carlo_gavazzi_em280": "Carlo Gavazzi EM280",
            "table_carlo_gavazzi_em300": "Carlo Gavazzi EM300",
            "table_carlo_gavazzi_et300": "Carlo Gavazzi ET300",
            "table_carlo_gavazzi_em510": "Carlo Gavazzi EM510",
            "table_carlo_gavazzi_em530": "Carlo Gavazzi EM530",
            "table_carlo_gavazzi_em540": "Carlo Gavazzi EM540",
            "table_solaredge": "SolarEdge",
            "table_eastron_sdm630_tcp": "Eastron SDM630 TCP",
            "table_tinkerforge_warp_charger": "Tinkerforge WARP Charger",
            "table_sax_power_home_basic_mode": "SAX Power Home (Basic Mode)",
            "table_sax_power_home_extended_mode": "SAX Power Home (Extended Mode)",
            "table_e3dc": "E3/DC (Hauskraftwerk)",
            "table_huawei_sun2000": "Huawei SUN2000",
            "table_huawei_sun2000_smart_dongle": "Huawei SUN2000 (Smart Dongle)",
            "table_huawei_emma": "Huawei EMMA",
            "virtual_meter": "Virtueller Zähler",
            "virtual_meter_inverter": "Wechselrichter",
            "virtual_meter_grid": "Netzanschluss",
            "virtual_meter_grid_internal_sensor": "Netzanschluss (interner Sensor)",
            "virtual_meter_grid_external_sensor": "Netzanschluss (externer Sensor)",
            "virtual_meter_battery": "Speicher",
            "virtual_meter_load": "Last",
            "virtual_meter_backup_load": "Backup-Last",
            "virtual_meter_pv": "PV",
            "virtual_meter_meter": "Zähler",
            "virtual_meter_current_transformer_1": "Stromwandler 1",
            "virtual_meter_current_transformer_2": "Stromwandler 2",
            "virtual_meter_additional_generation": "Zusätzliche Erzeugung",
            "location": "Messort",
            "location_matching": "Übereinstimmend",
            "location_different": "Abweichend",
            "device_address": "Geräteadresse",
            "device_address_muted": /*SFN*/(device_address: number) => "typischerweise " + device_address/*NF*/,
            "shelly_pro_3em_device_profile": "Geräteprofil",
            "shelly_pro_3em_device_profile_triphase": "Triphase",
            "shelly_pro_3em_device_profile_monophase": "Monophase",
            "shelly_em_monophase_channel": "Kanal",
            "shelly_em_monophase_channel_1": "1",
            "shelly_em_monophase_channel_2": "2",
            "shelly_em_monophase_channel_3": "3",
            "shelly_em_monophase_mapping": "Zuordnung",
            "shelly_em_monophase_mapping_l1": "L1",
            "shelly_em_monophase_mapping_l2": "L2",
            "shelly_em_monophase_mapping_l3": "L3",
            "carlo_gavazzi_phase": "Phase",
            "carlo_gavazzi_phase_l1": "L1",
            "carlo_gavazzi_phase_l2": "L2",
            "carlo_gavazzi_phase_l3": "L3",
            "register_address_mode": "Adressmodus",
            "register_address_mode_address": "Registeradresse (beginnt bei 0)",
            "register_address_mode_number": "Registernummer (beginnt bei 1)",
            "registers": "Register",
            "registers_add_title": "Register hinzufügen",
            "registers_add_message": /*SFN*/(have: number, max: number) => `${have} von ${max} Registern konfiguriert`/*NF*/,
            "registers_add_select_address_mode": "Zuerst Adressmodus auswählen.",
            "registers_edit_title": "Register bearbeiten",
            "registers_register": /*SFN*/(register_type: string, start_address: number, value_id_name: string) => "Lese " + register_type + " " + start_address + " als " + value_id_name/*NF*/,
            "registers_register_type": "Registertyp",
            "registers_register_type_holding_register": "Holding Register",
            "registers_register_type_input_register": "Input Register",
            "registers_start_address": "Startadresse",
            "registers_start_address_muted": "beginnt bei 0",
            "registers_start_number": "Startnummer",
            "registers_start_number_muted": "beginnt bei 1",
            "registers_value_type": "Werttyp",
            "registers_value_type_u16": "Ein Register, 16-Bit, Ganzzahl, vorzeichenlos",
            "registers_value_type_s16": "Ein Register, 16-Bit, Ganzzahl, vorzeichenbehaftet",
            "registers_value_type_u32be": "Zwei Register, 32-Bit, Ganzzahl, vorzeichenlos, Big-Endian",
            "registers_value_type_u32le": "Zwei Register, 32-Bit, Ganzzahl, vorzeichenlos, Little-Endian",
            "registers_value_type_s32be": "Zwei Register, 32-Bit, Ganzzahl, vorzeichenbehaftet, Big-Endian",
            "registers_value_type_s32le": "Zwei Register, 32-Bit, Ganzzahl, vorzeichenbehaftet, Little-Endian",
            "registers_value_type_f32be": "Zwei Register, 32-Bit, Gleitkommazahl, Big-Endian",
            "registers_value_type_f32le": "Zwei Register, 32-Bit, Gleitkommazahl, Little-Endian",
            "registers_value_type_u64be": "Vier Register, 64-Bit, Ganzzahl, vorzeichenlos, Big-Endian",
            "registers_value_type_u64le": "Vier Register, 64-Bit, Ganzzahl, vorzeichenlos, Little-Endian",
            "registers_value_type_s64be": "Vier Register, 64-Bit, Ganzzahl, vorzeichenbehaftet, Big-Endian",
            "registers_value_type_s64le": "Vier Register, 64-Bit, Ganzzahl, vorzeichenbehaftet, Little-Endian",
            "registers_value_type_f64be": "Vier Register, 64-Bit, Gleitkommazahl, Big-Endian",
            "registers_value_type_f64le": "Vier Register, 64-Bit, Gleitkommazahl, Little-Endian",
            "registers_offset": "Verschiebung",
            "registers_scale_factor": "Skalierfaktor",
            "registers_value_id": "Wert"
        },
        "script": {
        }
    }
}
