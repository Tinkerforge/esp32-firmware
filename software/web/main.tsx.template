/* esp32-firmware
 * Copyright (C) 2020-2021 Erik Fleckstein <erik@tinkerforge.com>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 */
{{{preact_debug}}}
import { h, render } from "preact";
import * as util from "./ts/util";
import { __ /*, select_language*/ } from "./ts/translation";
import { init_async_modal } from "./ts/components/async_modal";
import { App } from "./app";
{{{module_imports}}}

interface Module {
    init(): void;
}

let modules: Module[] = [{{{modules}}}];

// This is the part of the initialization to be done
// if we are authenticated (or authentication is deactivated)
function init() {
    for (let m of modules) {
        m.init();
    }

    util.initCapsLockCheck();
    util.setupEventSource(true, false, (ws, eventTarget) => {});
}

window.addEventListener("pageshow", () => {
    document.title = __("main.title");

    init_async_modal();

    // Disabled for now.
    // We somehow have to force preact to re-render all components for this to work.
    /*window.addEventListener('languagechange', () => {
        console.log("language change!");
        select_language();
    });*/
});

render(<App init={init} />, document.getElementById("app"));
