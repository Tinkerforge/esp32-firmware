From 12f2645735e5889590889d132d9aa0ebcf21a438 Mon Sep 17 00:00:00 2001
From: Erik Fleckstein <erik@tinkerforge.com>
Date: Fri, 18 Feb 2022 14:03:49 +0100
Subject: [PATCH] Fix log spam.

---
 src/lfs_config.h | 12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

diff --git a/src/lfs_config.h b/src/lfs_config.h
index 809d2cc..6dc05d3 100644
--- a/src/lfs_config.h
+++ b/src/lfs_config.h
@@ -13,6 +13,9 @@
 #include <string.h>
 #include <inttypes.h>
 #include "esp_heap_caps.h"
+#include "esp_log.h"
+
+
 
 #ifndef LFS_NO_MALLOC
 #include <stdlib.h>
@@ -32,7 +35,6 @@ extern "C"
 {
 #endif
 
-
 // Macros, may be replaced by system specific wrappers. Arguments to these
 // macros must not have side-effects as the macros can be removed for a smaller
 // code footprint
@@ -41,7 +43,7 @@ extern "C"
 #ifndef LFS_TRACE
 #ifdef LFS_YES_TRACE
 #define LFS_TRACE_(fmt, ...) \
-    printf("%s:%d:trace: " fmt "%s\n", __FILE__, __LINE__, __VA_ARGS__)
+    ESP_LOGV(TAG, "%s:%d:trace: " fmt "%s\n", __FILE__, __LINE__, __VA_ARGS__)
 #define LFS_TRACE(...) LFS_TRACE_(__VA_ARGS__, "")
 #else
 #define LFS_TRACE(...)
@@ -51,7 +53,7 @@ extern "C"
 #ifndef LFS_DEBUG
 #ifndef LFS_NO_DEBUG
 #define LFS_DEBUG_(fmt, ...) \
-    printf("%s:%d:debug: " fmt "%s\n", __FILE__, __LINE__, __VA_ARGS__)
+    ESP_LOGD(TAG, "%s:%d:debug: " fmt "%s\n", __FILE__, __LINE__, __VA_ARGS__)
 #define LFS_DEBUG(...) LFS_DEBUG_(__VA_ARGS__, "")
 #else
 #define LFS_DEBUG(...)
@@ -61,7 +63,7 @@ extern "C"
 #ifndef LFS_WARN
 #ifndef LFS_NO_WARN
 #define LFS_WARN_(fmt, ...) \
-    printf("%s:%d:warn: " fmt "%s\n", __FILE__, __LINE__, __VA_ARGS__)
+    ESP_LOGW(TAG, "%s:%d:warn: " fmt "%s\n", __FILE__, __LINE__, __VA_ARGS__)
 #define LFS_WARN(...) LFS_WARN_(__VA_ARGS__, "")
 #else
 #define LFS_WARN(...)
@@ -71,7 +73,7 @@ extern "C"
 #ifndef LFS_ERROR
 #ifndef LFS_NO_ERROR
 #define LFS_ERROR_(fmt, ...) \
-    printf("%s:%d:error: " fmt "%s\n", __FILE__, __LINE__, __VA_ARGS__)
+    ESP_LOGE(TAG, "%s:%d:error: " fmt "%s\n", __FILE__, __LINE__, __VA_ARGS__)
 #define LFS_ERROR(...) LFS_ERROR_(__VA_ARGS__, "")
 #else
 #define LFS_ERROR(...)
-- 
2.35.1

