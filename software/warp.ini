[env:warp]
extends = env:base_esp32

lib_deps = ${env:base_esp32.lib_deps}
           https://github.com/Tinkerforge/WireGuard-ESP32-Arduino#bf86557
           https://github.com/Tinkerforge/tfmodbustcp#4a936ff

build_flags = ${env:base_esp32.build_flags}
              -DFIRMWARE_UPDATE_ENABLE_ROLLBACK=1
              -DMETER_VALUE_HISTORY_VALUE_TYPE=int32_t
              -DMETER_VALUE_HISTORY_VALUE_MIN=-9999999
              -DMETER_VALUE_HISTORY_VALUE_MAX=9999999
              -DMETERS_SLOTS=2
              -DMETERS_SLOT_0_DEFAULT_CLASS=MeterClassID::RS485Bricklet
              -DPOWER_MANAGER_DEFAULT_METER_SLOT=1
              ;-DTF_NETWORK_UTIL_DEBUG_LOG=1
              ;-DTF_IGNORE_DEVICE_IDS=2159,277,286,2106
              ;2159: EVSE
              ;277: RS485
              ;286: NFC
              ;2106: RTC 2.0

custom_name = warp
custom_config_type = warp
custom_host_prefix = warp
custom_display_name = WARP Charger
custom_manual_url = https://www.warp-charger.com/downloads/#documents-warp1
custom_apidoc_url = https://www.warp-charger.com/api.html
custom_doc_base_url = https://docs.warp-charger.com
custom_firmware_url = https://www.warp-charger.com/downloads/#firmwares-warp1
custom_firmware_update_url = https://www.warp-charger.com/firmwares/
custom_support_email = info@tinkerforge.com
custom_require_firmware_info = 0
custom_web_build_flags = METERS_SLOTS = 2
custom_branding = WARP
custom_local_meter_default_display_name = WARP Charger

custom_backend_modules = ESP32 Brick
                         Watchdog
                         Uptime Tracker
                         Debug Protocol
                         EVSE
                         Evse Common
                         Evse Led
                         Network
                         NTP
                         Wifi
                         Network Helper
                         Rtc Bricklet
                         Mqtt
                         Mqtt Auto Discovery
                         Http
                         WS
                         Event
                         System
                         Firmware Update
                         Automation
                         Modbus TCP Client
                         Meters
                         Meters RS485 Bricklet
                         Meters API
                         Meters Modbus TCP
                         Meters Sun Spec
                         Meters SMA Speedwire
                         Meters RCT Power
                         Meters Legacy API
                         Require Meter
                         Hidden Proxy
                         Charge Manager
                         CM Networking
                         Charge Tracker
                         Power Manager
                         Users
                         NFC
                         Device Name
                         Modbus TCP
                         Modbus TCP Debug
                         Wireguard
                         Charge Limits
                         Coredump
                         Pwa
                         Certs
                         Remote Access

custom_frontend_modules = Device Name
                          EVSE Common
                          Modbus TCP Client
                          Meters
                          Meters RS485 Bricklet
                          Meters API
                          Meters Sun Spec
                          Meters Modbus TCP
                          Meters SMA Speedwire
                          Meters RCT Power
                          Meters Legacy API
                          Charge Tracker
                          Charge Manager
                          Power Manager
                          Network
                          Wifi
                          Wireguard
                          Mqtt
                          Mqtt Auto Discovery
                          Modbus TCP
                          Modbus TCP Debug
                          NFC
                          Users
                          Certs
                          Remote Access
                          Automation
                          NTP
                          Rtc
                          Time
                          Event Log
                          System
                          Firmware Update
                          Charge Limits
                          Require Meter
                          EVSE Group
                          Energy Management Group
                          Network Group
                          Interfaces Group
                          Users Group
                          System Group

custom_frontend_components_pre_ocpp = EVSE Group $ Open
                                        EVSE Common | EVSE Settings
                                        EVSE Common | EVSE
                                        Charge Tracker
                                        Automation
                                      EVSE Group $ Close
                                      Energy Management Group $ Open
                                        Meters
                                        Charge Manager | Charge Manager Chargers
                                        Power Manager | PV Excess Settings
                                        Charge Manager | Charge Manager Settings
                                      Energy Management Group $ Close
                                      Network Group $ Open
                                        Network
                                        Wifi | Wifi STA
                                        Wifi | Wifi AP
                                        Wireguard
                                      Network Group $ Close
                                      Interfaces Group $ Open
                                        Mqtt
                                        Modbus TCP

custom_frontend_components_post_ocpp = Interfaces Group $ Close
                                       Users Group $ Open
                                         NFC
                                         Users
                                       Users Group $ Close
                                       System Group $ Open
                                         System
                                         Certs
                                         Remote Access
                                         Time
                                         Event Log
                                         Firmware Update
                                       System Group $ Close

custom_frontend_components = ${this.custom_frontend_components_pre_ocpp}
                             ${this.custom_frontend_components_post_ocpp}

custom_frontend_status_components_pre_ocpp = Device Name
                                             System
                                             Firmware Update
                                             Network
                                             Charge Manager | Charge Mode Buttons
                                             EVSE Common | EVSE Status
                                             Power Manager
                                             Charge Limits
                                             Meters
                                             Charge Tracker
                                             Charge Manager
                                             Wifi
                                             Wireguard
                                             Mqtt
                                             Remote Access

custom_frontend_status_components_post_ocpp = Time

custom_frontend_status_components = ${this.custom_frontend_status_components_pre_ocpp}
                                    ${this.custom_frontend_status_components_post_ocpp}

; ============================================================================

[env:warp_debug]
extends = env:warp

custom_frontend_debug = true

; ============================================================================

[env:warp_web]
extends = env:warp

custom_web_only = true

; ============================================================================

[env:warp_web_debug]
extends = env:warp

custom_web_only = true
custom_frontend_debug = true

; ============================================================================

[env:warp_signed]
extends = env:warp
custom_signature_preset = warp:v1

; ============================================================================

[env:warp_nightly]
extends = env:warp

build_flags = ${env:warp.build_flags}
              -DNIGHTLY

; ============================================================================

[env:warp_nightly_signed]
extends = env:warp

custom_signature_preset = warp:v1

build_flags = ${env:warp.build_flags}
              -DNIGHTLY

; ============================================================================

[env:warp_with_ocpp]
extends = env:warp

lib_deps = ${env:warp.lib_deps}
           https://github.com/Tinkerforge/tfocpp#8f315f5e

build_flags = ${env:warp.build_flags}
               # When increasing the log level, also patch platform_printfln ESP32Platform.cpp to not log into a trace buffer!
              -DOCPP_LOG_LEVEL=2
              -DOCPP_STATE_CALLBACKS
              -DOCPP_SUPPORTED_FEATURE_PROFILES="\"Core,SmartCharging\""
              -DOCPP_WEB_SOCKET_PING_INTERVAL=10
              -DOCPP_WEB_SOCKET_PING_INTERVAL_REQUIRES_REBOOT=true
              -DOCPP_METER_VALUES_ALIGNED_DATA_MAX_LENGTH=5
              -DOCPP_DEFAULT_CLOCK_ALIGNED_DATA_INTERVAL=60
              -DOCPP_DEFAULT_METER_VALUES_ALIGNED_DATA="\"Energy.Active.Import.Register\""
              -DOCPP_METER_VALUES_SAMPLED_DATA_MAX_LENGTH=5
              -DOCPP_DEFAULT_METER_VALUE_SAMPLE_INTERVAL=60
              -DOCPP_DEFAULT_METER_VALUES_SAMPLED_DATA="\"Energy.Active.Import.Register\""

custom_backend_modules = ${env:warp.custom_backend_modules}
                         Ocpp

custom_frontend_modules = ${env:warp.custom_frontend_modules}
                          Ocpp

custom_frontend_components = ${env:warp.custom_frontend_components_pre_ocpp}
                             Ocpp
                             ${env:warp.custom_frontend_components_post_ocpp}

custom_frontend_status_components = ${env:warp.custom_frontend_status_components_pre_ocpp}
                                    Ocpp
                                    ${env:warp.custom_frontend_status_components_post_ocpp}
